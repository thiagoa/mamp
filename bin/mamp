#!/usr/bin/env ruby
require 'gli'
require 'mamp'

include GLI::App
include Mamp

config_file File.join(ENV['HOME'], '.mamprc.yaml')

program_desc 'Web development with Apache, PHP and MySQL. This app ' +
             'provides an unified interface for common tasks.'

version VERSION

ServerRunner.add_server Server.new(:apache, 'Apache')
ServerRunner.add_server Server.new(:mysql,  'MySQL')

apache_command = 'sudo /usr/sbin/apachectl'
mysql_command  = '/usr/local/bin/mysql.server'

ServerRunner.add_command Command.new(:start,   :apache, "#{apache_command} start",   'Starting')
ServerRunner.add_command Command.new(:start,   :mysql,  "#{mysql_command} start",    'Starting')
ServerRunner.add_command Command.new(:stop,    :apache, "#{apache_command} stop",    'Stopping')
ServerRunner.add_command Command.new(:stop,    :mysql,  "#{mysql_command} stop",     'Stopping')
ServerRunner.add_command Command.new(:restart, :apache, "#{apache_command} restart", 'Restarting')
ServerRunner.add_command Command.new(:restart, :mysql,  "#{mysql_command} restart",  'Restarting')

ServerRunner.command_actions.each do |command|
  ServerRunner.server_ids.each do |server|
    desc "Command to #{command} #{server} server "
    arg_name 'shell_command'
    found_command = ServerRunner.find_command!(command, server)
    default_value found_command.command
    flag build_command_flag(found_command)
  end

  desc "#{command.capitalize} specified servers. #{supported_servers}"
  arg_name 'server_name'
  command command do |c|
    c.action do |global_options, options, args|
      run_servers! command, args, global_options
    end
  end
end

desc 'Change current PHP version. You must install PHP versions with Homebrew.'
arg_name 'php_version'
command :php do |c|
  c.action do |global_options, options, args|
    puts "php command ran"
  end
end

desc 'Edit Apache vhost. The vhost must be previously created with the vhost command.'
arg_name 'vhosts_name'
command :edit do |c|
  c.desc 'Editor to use. Defaults to $EDITOR env variable.'
  c.default_value ENV['EDITOR']
  c.flag :editor

  c.action do |global_options, options, args|
    puts "edit command ran"
  end
end

desc 'Initialize environment to use mamp. Needs a root password.'
command :init do |c|
  c.action do |global_options, options, args|
    puts "setup command ran"
  end
end

desc 'Add or remove vhosts from Apache'
arg_name 'vhost_name'
command :vhost do |c|
  c.desc 'Directory to create the vhost'
  c.arg_name 'directory'
  c.default_value '.'
  c.flag :d

  c.desc 'Add a vhost'
  c.switch [:a, :add], negatable: false

  c.desc 'Remove a vhost'
  c.switch :remove, negatable: false

  c.action do |global_options, options, args|
    puts "vhost command ran"
  end
end

pre do |global, command, options, args|
  true
end

post do |global, command, options, args|
end

on_error do |exception|
  true
end

exit run(ARGV)
